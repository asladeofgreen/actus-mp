# **********************************
# N.B. Auto-generated using actus-mp
# **********************************
import dataclasses
import datetime
import typing

from pyactus.typeset import enums
from pyactus.typeset import auxiliary
from pyactus.typeset import contracts


@dataclasses.dataclass
class TermsetOf{{utils.to_camel_case(contract.type_info.identifier)}}(contracts.ContractTermset):
    """Set of applicable terms: {{contract.type_info.acronym}} -> {{contract.type_info.name}}.

    {{contract.type_info.description}}

    """
    # Contract Identifier.
    contract_id: str = None

    # Contract Role.
    contract_role: enums.ContractRole = None

    # Contract Type :: The ContractType is the most important information. It defines the cash flow generating pattern of a contract. The ContractType information in combination with a given state of the risk factors will produce a deterministic sequence of cash flows which are the basis of any financial analysis.
    contract_type: enums.ContractType = enums.ContractType.{{contract.type_info.acronym}}

{% if contract.term_set %}
{% for term in contract.term_set %}
{% if term.identifier not in ("contractID", "contractType", "contractRole",) %}
{% if term.short_description %}
    # {{term.name}} :: {{term.short_description}}.
{% else %}
    # {{term.name}}.
{% endif %}
    {{utils.to_underscore_case(term.identifier)}}: {{utils.to_python_type(term)}} = {{utils.to_python_default(term)}}

{% endif %}
{% endfor %}
{% else %}
    # WARNING:: This contract type has not yet been formally defined.  This class is thus simply a placeholder.
    # raise NotImplementedError("WARNING: Standard does not yet support this contract type.")
{% endif %}
